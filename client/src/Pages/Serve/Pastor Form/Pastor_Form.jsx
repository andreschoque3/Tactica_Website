import React, { useState, useEffect } from 'react'
import { Link } from 'react-router-dom'
import 'react-toastify/dist/ReactToastify.css';
import '../../Serve/Form.css'
import Navbar from '../../../Components/Navbar/Navbar'
import Footer from '../../../Components/Footer/Footer'
import { toast } from 'react-toastify';
import jsPDF from 'jspdf'

function Pastor_Form() {

  // browser tab title
  useEffect(() => {
    document.title = "Applicant's Pastor Form";
  }, []);

  // phone regex
  function handlePhoneInput(event) {
    const enteredValue = event.target.value;
    event.target.value = enteredValue.replace(/[^0-9()-]/g, ''); // Remove any characters other than numbers, dashes, and parentheses
  }

  //max text of 300 words
  const [maturity, setMaturity] = useState('');
  const [locallevel, setLocalLevel] = useState('');
  const [missionservice, setMissionService] = useState('');
  const [moreinfo, setMoreInfo] = useState('');

  const handleTextareaChange = (event, setter) => {
    const text = event.target.value;
    // Split text by space to count words
    const words = text.trim().split(/\s+/);
    if (words.length <= 300) {
      setter(text);
    }
  };

  // generate PDF with responses
  const generatePDF = async (formData) => {
    const pdf = new jsPDF();
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    let y = 20;
    const lineHeight = 10;
    const titleFontSize = 18;
    const stripeHeight = 5;

    // Set font properties
    pdf.setFont('helvetica');
    pdf.setFontSize(titleFontSize);

     // Add red stripes at the top and bottom
    pdf.setFillColor(255, 0, 0);
    pdf.rect(0, 0, pageWidth, stripeHeight, 'F'); // Top stripe
    pdf.rect(0, pageHeight - stripeHeight, pageWidth, stripeHeight, 'F'); // Bottom stripe

    // Calculate the width of the title text
    const titleTextWidth = pdf.getStringUnitWidth('Application Form') * titleFontSize / pdf.internal.scaleFactor;

    // Center the title horizontally
    const titleX = (pageWidth - titleTextWidth) / 2;

    // Add title
    pdf.setTextColor(0, 0, 0);
    pdf.text(titleX, y, 'Application Form 4');
      y += titleFontSize + 2;

    pdf.setFontSize(12);

    // Add form data
  Object.keys(formData).forEach((key) => {
    const lines = pdf.splitTextToSize(`${key}: ${formData[key]}`, pdf.internal.pageSize.width - 40);
    lines.forEach((line) => {
      pdf.text(20, y, line);
      y += lineHeight; // Increase spacing after the first line of each label
    });
  });

    // Add footer
    pdf.text(20, pdf.internal.pageSize.height - 10, 'Generated by TACTICA Minstries');

  // Save PDF
  pdf.save('application_form_4.pdf');
};

  // POST request to google sheet
  const scriptURL = 'https://script.google.com/macros/s/AKfycbwspzw4WYSmJdAWbWbenI436Qj08juBok6jdmkXwWNgpRJgJrFFQ6sMoXw7IH9B2K5H/exec';

  const handleSubmit = async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);

    try {
      const response = await fetch(scriptURL, {
        method: 'POST',
        body: formData
      });

      if (response.ok) {
        generatePDF(Object.fromEntries(formData.entries()))
        toast.success('Form submitted successfully')
        e.target.reset();
        setMaturity('');
        setLocalLevel('');
        setMissionService('');
        setMoreInfo('');
      } else {
        toast.error('Form submission failed')
        throw new Error('Failed to submit message');
      }
    } catch (error) {
      console.error('Error!', error.message);
      toast.error('Error', error.message);
    }
  };

  return (
    <div>
      <Navbar/>
        <div className='form-container'>
            <h1>Applicant's Pastor Form</h1>
            <hr style={{width: '35%'}} />

            <form action="" onSubmit={handleSubmit}>

              <div className='details-block'>
                <h2>Personal Details</h2>
                
                <div className='forms'>

                    <div className='field'>
                        <label htmlFor="">Name</label>
                        <input type="text" name="Pastor-detail-name" id="" placeholder="Enter pastor's name" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Church Name</label>
                        <input type="text" name="Church-detail-name" id="" placeholder="Enter church name" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Date</label>
                        <input type="date" name="Pastor-date-entry" id="" placeholder="mm/dd/yyyy" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Church Phone Number</label>
                        <input type="tel" name="Church-detail-phone" id="" placeholder="ex: 999-999-9999" onInput={handlePhoneInput} required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Email</label>
                        <input type="email" name="Pastor-detail-email" id="" placeholder="Enter pastor's email address" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Country</label>
                        <input type="text" name="Pastor-detail-country-address" id="" placeholder="Enter country" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">City</label>
                        <input type="text" name="Pastor-detail-city-address" id="" placeholder="Enter city" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">State</label>
                        <input type="text" name="Pastor-detail-state-address" id="" placeholder="Enter state" required />
                    </div>

                    <div className='field'>
                        <label htmlFor="">Zip Code</label>
                        <input type="text" name="Pastor-zip-code-address" id="" placeholder="Enter zip code" required />
                    </div>

                </div>

              </div>

              <div className='details-block'>
                <h2>Questions</h2>

                <div className='forms'>

                    <div className='field'>
                        <label htmlFor="">Name of individual applying to serve under TACTICA</label>
                        <input type="text" name='Individual-applying' placeholder='Enter individual' />
                    </div>

                    <div className='text'>
                        <p style={{width: '100%'}}>Please answer the following questions based on your knowledge of the applicant so that he or she may be considered for participation on a TACTICA team.</p>
                    </div>

                    <div className='paragraph'>
                        <label htmlFor="" style={{display: 'inline-block', width: '94%'}}>Please describe the applicant's spiritual and emotional maturity. Do you consider him or her prepared and with a maturity 
                        level that will allow him or her to handle a short-term mission trip into a third-world country?</label>
                        <textarea name="Maturity-level" id="" cols="30" rows="5" style={{width: '90%'}} value={maturity} onChange={(e) => handleTextareaChange(e, setMaturity)} placeholder='Maximum of 300 words'></textarea>
                    </div>

                    <div className='paragraph'>
                        <label htmlFor="">Please describe the applicant's participation and involvement at the local church level.</label>
                        <textarea name="Involvement" id="" cols="54" rows="5" value={locallevel} onChange={(e) => handleTextareaChange(e, setLocalLevel)} placeholder='Maximum of 300 words'></textarea>
                    </div>

                    <div className='paragraph'>
                        <label htmlFor="">Is there any reason you know of why this applicant may not be fit for mission service...whether that be spiritually, physically, financially, mentally, or emotionally?</label>
                        <textarea name="Fit-for-mission-service" id="" cols="30" rows="5" style={{width: '90%'}} value={missionservice} onChange={(e) => handleTextareaChange(e, setMissionService)} placeholder='Maximum of 300 words'></textarea>
                    </div>

                    <div className='paragraph'>
                        <label htmlFor="">Is there any other information you would like to share with us?</label>
                        <textarea name="Extra-info" id="" cols="72" rows="5" value={moreinfo} onChange={(e) => handleTextareaChange(e, setMoreInfo)} placeholder='Maximum of 300 words'></textarea>
                    </div>

                </div>
              </div>

              <button type='submit' className='form-btn-1'>Save</button>
              <button className='form-btn-2'>PDF <i className='fas fa-file-arrow-down'></i></button>

            </form>
        </div>
      <Footer/>
    </div>
  )
}

export default Pastor_Form